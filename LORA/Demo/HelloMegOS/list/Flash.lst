C51 COMPILER V9.52.0.0   FLASH                                                             12/21/2017 17:40:56 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE FLASH
OBJECT MODULE PLACED IN .\output\Flash.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE SCF\Flash.c BROWSE ORDER INCDIR(.\SCF) DEBUG OBJECTEXTEND PRINT(.\list\Flas
                    -h.lst) TABS(2) OBJECT(.\output\Flash.obj)

line level    source

   1          #include "driver.h"
   2          struct  FlashData  code  SystemParameter _at_ (STORPAGE*PAGESIZE);//flash参量
   3          //********************************************************************************************************
             -**
   4          void  ErasePage(u8 page)  
   5          {
   6   1             EA=0;
   7   1           FLKEY = 0xA5;
   8   1           FLKEY = 0xF1;
   9   1             PSCTL = 0x03;//允许FLASH扇区擦除 允许FLASH写
  10   1           *(u8 xdata *)(page*PAGESIZE)=0xff;
  11   1           PSCTL = 0x00;//
  12   1           EA=1;
  13   1      }
  14          void   FlashWrite(u16 addr,u8 value)               //FlashWrite() called by .lib
  15          {
  16   1         while(value!=*(u8 code *)addr)
  17   1        {
  18   2           EA=0;
  19   2             PSCTL = 0x01;//允许FLASH扇区擦除 允许FLASH写
  20   2           FLKEY = 0xA5;
  21   2           FLKEY = 0xF1;
  22   2           *(u8 xdata *)addr=value;
  23   2           PSCTL = 0x00;//
  24   2           EA=1;
  25   2        }
  26   1      
  27   1      
  28   1      }
  29          //***************************************************************************************************
  30          void  SaveData(u8 page,u16 addr,u8 value)
  31          {
  32   1        u16   i;
  33   1        u16   dadd;//目标地址，源地址
  34   1          u8    buf[STORSIZE];
  35   1         
  36   1        
  37   1        dadd=page*PAGESIZE;
  38   1        if(value==((u8 code *)dadd)[addr])  return;
  39   1      
  40   1        //拷贝数据页数据至缓存
  41   1          for(i=0;i<STORSIZE;i++)
  42   1        {
  43   2          buf[i]=((u8 code *)dadd)[i];
  44   2        }
  45   1        //擦除数据页
  46   1        ErasePage(page);
  47   1        //拷贝缓存页数据至数据页
  48   1        for(i=0;i<STORSIZE;i++)
  49   1        {
  50   2          if(addr==i)FlashWrite(dadd,value);
  51   2            else FlashWrite(dadd,buf[i]);
  52   2          dadd++; 
  53   2        }
C51 COMPILER V9.52.0.0   FLASH                                                             12/21/2017 17:40:56 PAGE 2   

  54   1      }
  55          //保存事件日志*******************************************************************************************
  56          void  SaveEventLog(u16  Event,u16 Data,u8  *Brief) reentrant
  57          {
  58   1         u16   dadd;//目标地址
  59   1         struct  EventLog    log;
  60   1         struct  EventLog code  *plog=(struct  EventLog code *)(LOGPAGE*PAGESIZE);
  61   1         u8   i;
  62   1       
  63   1          for(i=0;plog->Event != 0xffff;i++,plog++);
  64   1         
  65   1             log.Number= i;
  66   1           log.Event = Event;
  67   1           log.Data  = Data;
  68   1           log.Brief = Brief;
  69   1        
  70   1          
  71   1           dadd=(i *sizeof(struct  EventLog))+(LOGPAGE*PAGESIZE);//目标地址
  72   1           for(i=0;i<sizeof(struct  EventLog);i++)
  73   1           {
  74   2            FlashWrite(dadd+i,((u8 *)&log)[i]);
  75   2           }
  76   1      
  77   1      }//
  78          
  79          ////出厂设置******************************************************************************
  80          void   FactorySet(void)
  81          {
  82   1          u8  i;  
  83   1        u16   dadd;//目标地址
  84   1      
  85   1        ErasePage(STORPAGE);
  86   1      
  87   1        dadd=(STORPAGE*PAGESIZE);//目标地址
  88   1        for(i=0;i<sizeof(struct  FlashData);i++)
  89   1        {
  90   2           FlashWrite(dadd+i,0);
  91   2        }
  92   1      }
  93          
  94          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    483    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
