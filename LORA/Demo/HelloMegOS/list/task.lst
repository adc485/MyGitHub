C51 COMPILER V9.52.0.0   TASK                                                              12/21/2017 17:40:56 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE TASK
OBJECT MODULE PLACED IN .\output\task.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE SCF\task.c BROWSE ORDER INCDIR(.\SCF) DEBUG OBJECTEXTEND PRINT(.\list\task.
                    -lst) TABS(2) OBJECT(.\output\task.obj)

line level    source

   1          #include "system.h"
   2          
   3            struct  Task      *FirstTask;//头任务指针
   4            struct  Task      *LastTask; //尾任务指针
   5            struct  Task   xdata    TaskBuf[TASKS];//任务寄存数组
   6          
   7            struct  DelayTimer  xdata  delaytsak[TIMERS];
   8            struct  UsartData   usart   ={0};//硬件串口所用数据
   9            u16     delay_ms=0;//该全局变量会由定时器中断每1ms减一
  10          //************************************************************************************
  11          void   ISR_timer2(void)interrupt  INTERRUPT_TIMER2 
  12          {
  13   1          u8  i;
  14   1          u8   *pbuf;
  15   1      
  16   1        if(delay_ms) delay_ms--;
  17   1          //用于延时任务********************************************************
  18   1         for(i=0;i<TIMERS;i++)
  19   1         {  if(delaytsak[i].Delay_ms)
  20   2            {
  21   3            delaytsak[i].Delay_ms--;
  22   3          if(delaytsak[i].Delay_ms==0)
  23   3          {
  24   4           AddTask(delaytsak[i].Type,delaytsak[i].Length,delaytsak[i].Data);
  25   4          }
  26   3            }
  27   2         }
  28   1        
  29   1      
  30   1          //用于硬件串口接收数据包的结束
  31   1              if(0!=usart.Time) usart.Time--;
  32   1         else if(0!= usart.RXlenth)
  33   1        {   
  34   2           usart.RXbuf[usart.RXlenth]='\0';
  35   2             AddTask(1,usart.RXlenth,usart.RXbuf);//调试指令  
  36   2          
  37   2          pbuf = malloc(UARTLENGTH);
  38   2          if(pbuf != NULL) {usart.RXbuf = pbuf;}
  39   2          usart.RXlenth=0;
  40   2        }
  41   1      
  42   1        TF2H=0;
  43   1      //  TF2L=0;
  44   1      }
  45          void ISR_uart0(void) interrupt 4 
  46          { 
  47   1          if(RI0) 
  48   1        { 
  49   2            if(usart.RXlenth<UARTLENGTH)  
  50   2             usart.RXbuf[usart.RXlenth++]=SBUF0;
  51   2          usart.Time = 10;
  52   2      
  53   2           RI0 = 0; 
  54   2        } 
C51 COMPILER V9.52.0.0   TASK                                                              12/21/2017 17:40:56 PAGE 2   

  55   1      } 
  56          //添加任务函数********************************************************************************************
             -*****
  57          u8   AddTask(u8 Type ,u8  Data,u8  *pData)reentrant
  58          {
  59   1         u8   i;
  60   1      
  61   1          EA =0;
  62   1          for(i=0;i<TASKS;i++) //搜索空闲任务结构体
  63   1          {
  64   2             if(TaskBuf[i].Type==0)
  65   2                   break;
  66   2          }
  67   1        
  68   1          if(i<TASKS)  //
  69   1         {
  70   2            if(FirstTask==NULL)
  71   2             { FirstTask =&TaskBuf[i];
  72   3               LastTask  =&TaskBuf[i];
  73   3              }
  74   2            else
  75   2            {  LastTask->Next=&TaskBuf[i];
  76   3             LastTask      =&TaskBuf[i];
  77   3             }
  78   2        
  79   2            LastTask->Type=Type;
  80   2              LastTask->Data=Data;
  81   2            LastTask->pData=pData;
  82   2            LastTask->Next=NULL;
  83   2            
  84   2          }
  85   1         
  86   1          EA=1;
  87   1          return   0;
  88   1      }//
  89          
  90           //添加延时任务***************************************************************************************  
  91          u8    AddDelayTask(u32  t,u8  TaskType ,u8  Length,u8  *TaskData)
  92          {
  93   1        u8    i;
  94   1        for(i=0;i<TIMERS;i++)
  95   1         {  if(delaytsak[i].Delay_ms ==0)
  96   2          break;
  97   2         }
  98   1         
  99   1          if(i<TIMERS)
 100   1        { delaytsak[i].Delay_ms =t;
 101   2          delaytsak[i].Type =TaskType;
 102   2          delaytsak[i].Length =Length;
 103   2          delaytsak[i].Data =TaskData;
 104   2          return  1;
 105   2        }
 106   1        else
 107   1        {
 108   2          SaveEventLog(5,TaskType,"delaytask overflow");
 109   2          return  0;
 110   2        }
 111   1         return  0;
 112   1      }  
 113          
 114          //重设已创建延时任务时间，为0则取消该任务*****************************************************************
             -*********************
C51 COMPILER V9.52.0.0   TASK                                                              12/21/2017 17:40:56 PAGE 3   

 115          void   SetDelayTimer(u8 TaskType,u32 newtime)
 116          {
 117   1        u8    i;  
 118   1        for(i=0;i<TIMERS;i++)
 119   1        {
 120   2           if(delaytsak[i].Type==TaskType && delaytsak[i].Delay_ms!=0)
 121   2           {   
 122   3            if(0==newtime)
 123   3            {delaytsak[i].Type =0;
 124   4            }
 125   3            delaytsak[i].Delay_ms =newtime;
 126   3           }
 127   2        }
 128   1      }
 129          
 130          
 131          //初始化任务，在主循环之前，只执行一次********************************************************************
             -********
 132          void  InitTask(void)
 133          {
 134   1         u16  i;
 135   1      
 136   1           PCA0MD    &= ~0x40;  //关闭WDT
 137   1        
 138   1         for(i=0;i<0x1000;*(u8 xdata *)i=0,i++);
 139   1         init_sysclk();
 140   1         init_timer2();
 141   1           init_port();
 142   1         init_uart0();
 143   1         init_sysconfig();
 144   1         usart.RXbuf=malloc(UARTLENGTH);
 145   1        
 146   1         if(SystemParameter.FSFlag ==-1) {FactorySet();}
 147   1         SaveEventLog(1,RSTSRC,"system reset");
 148   1            
 149   1         EA=1;
 150   1         LED_OFF();
 151   1         WDG_INIT();
 152   1         AddTask(2 ,0,NULL);
 153   1      }
 154          
 155          //空闲任务，任务队列为空时执行，耗时要尽量的短************************************************************
             -**************************************
 156           void  IdleTask(void)
 157           {                  
 158   1         
 159   1       }
 160          
 161          
 162          
 163          
 164          
 165          
 166          
 167          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1077    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =    340    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.52.0.0   TASK                                                              12/21/2017 17:40:56 PAGE 4   

   DATA SIZE        =     14      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
